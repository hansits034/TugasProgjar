FILE SERVER
TUJUAN: melayani client dalam request file server

ATURAN PROTOKOL:
- client harus mengirimkan request dalam bentuk string
- string harus dalam format
  REQUEST spasi PARAMETER
- PARAMETER dapat berkembang menjadi PARAMETER1 spasi PARAMETER2 dan seterusnya

REQUEST YANG DILAYANI:
- informasi umum:
  * Jika request tidak dikenali akan menghasilkan pesan
    - status: ERROR
    - data: request tidak dikenali
  * Semua result akan diberikan dalam bentuk JSON dan diakhiri
    dengan character ascii code #13#10#13#10 atau "\r\n\r\n"

LIST
* TUJUAN: untuk mendapatkan daftar seluruh file yang dilayani oleh file server
* PARAMETER: tidak ada
* RESULT:
- BERHASIL:
  - status: OK
  - data: list file
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

GET
* TUJUAN: untuk mendapatkan isi file dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang diminta
  - data_file : isi file yang diminta (dalam bentuk base64)
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

UPLOAD
* TUJUAN: mengunggah file baru ke file server
* PARAMETER:
  - PARAMETER1: nama file
  - PARAMETER2: isi file dalam base64 string
* RESULT:
- BERHASIL:
  - status: OK
  - data: nama file berhasil diupload
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

DELETE
* TUJUAN: menghapus file dari file server
* PARAMETER:
  - PARAMETER1: nama file yang ingin dihapus
* RESULT:
- BERHASIL:
  - status: OK
  - data: nama file berhasil dihapus
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

Penambahan dua fitur `UPLOAD` dan `DELETE` memungkinkan client untuk mengelola file pada server secara lebih dinamis. UPLOAD mengizinkan client mengirim file dengan encode base64 untuk disimpan di server, sedangkan DELETE memberi kemampuan untuk menghapus file tertentu. Semua proses tetap mengikuti format standar protokol dengan respons JSON dan terminator `\r\n\r\n`.

